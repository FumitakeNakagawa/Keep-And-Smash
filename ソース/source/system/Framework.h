#include	"System.h"
#include	"../Scene/Scene.h"
#ifndef __FRAMEWORK_H__
#define __FRAMEWORK_H__

//*****************************************************************************
//
//		フレームワーク
//
//*****************************************************************************

//*****************************************************************************
//
//*****************************************************************************
#define	FPS_60		0	//	固定６０フレーム
#define	FPS_30		1	//	固定３０フレーム
#define	FPS_FLEX	2	//	可変フレーム

//*****************************************************************************
//
//*****************************************************************************
class Framework
{
private:
	//------------------------------------------------------
	//	シーン
	//------------------------------------------------------
	Scene	*scene;

	//------------------------------------------------------
	//	更新
	//------------------------------------------------------
	BOOL	bRender;

	//------------------------------------------------------
	//	フレームレート関連
	//------------------------------------------------------
	DWORD	dwGameFrame;	//	起動からのフレーム数

	BYTE	FPSMode;		//	フレーム制御モード
	DWORD	dwFrameTime;

	DWORD	dwFPS;			//	処理フレームレート
	DWORD	dwRenderFPS;	//	描画フレームレート

	DWORD	dwCurFrame;		//	処理カウンタ
	DWORD	dwRCurFrame;	//	描画カウンタ

public:
	//------------------------------------------------------
	//	初期化・解放
	//------------------------------------------------------
	Framework(int FPSMode = FPS_FLEX);
	~Framework();

	//------------------------------------------------------
	//	更新・描画
	//------------------------------------------------------
	bool Update();
	void Render();

	//------------------------------------------------------
	//	シーンの切り替え
	//------------------------------------------------------
	void ChangeScene(Scene* newScene)
	{
		//	現在のシーン解放
		if (scene != NULL) delete scene;
		//	シーンの切り替え＆初期化
		scene = newScene;
		scene->Initialize();
	}
	//	シーンのプッシュ
	void PushScene(Scene* newScene)
	{
		if (newScene == NULL)	return;

		newScene->setStackScene(scene);	//	現シーンの退避
		scene = newScene;					//	新たなシーンを現シーンに
		scene->Initialize();				//	初期化
	}
	//	シーンのポップ
	void PopScene()
	{
		Scene* popScene = scene->getStackScene();
		if (popScene == NULL)	return;		//	POPする物がなければ終了

		scene->setStackScene(NULL);		//	繋がりを切断
		delete	scene;						//	削除
		scene = popScene;					//	以前のシーンを現シーンに
	}
};

extern Framework* MainFrame;

#endif
